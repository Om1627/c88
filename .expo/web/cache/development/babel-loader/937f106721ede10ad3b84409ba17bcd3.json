{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP WORLD\\\\Desktop\\\\whitehat\\\\barter\\\\screens\\\\Exchange.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport firebase from 'firebase';\nimport db from \"../config\";\nimport MyHeader from \"../components/MyHeader\";\n\nvar Exchange = function (_Component) {\n  _inherits(Exchange, _Component);\n\n  var _super = _createSuper(Exchange);\n\n  function Exchange() {\n    var _this;\n\n    _classCallCheck(this, Exchange);\n\n    _this = _super.call(this);\n\n    _this.addItem = function (itemName, description) {\n      var userName = _this.state.userName;\n\n      var exchangeId = _this.createUniqueId();\n\n      db.collection(\"exchange_requests\").add({\n        \"user_id\": userName,\n        \"item_name\": itemName,\n        \"description\": description,\n        \"exchangeId\": exchangeId,\n        \"item_status\": \"requested\",\n        \"date\": firebase.firestore.FieldValue.serverTimestamp()\n      });\n      db.collection('users').where(\"user_id\", \"==\", userName).get().then().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection('users').doc(doc.id).update({\n            IsExchangeRequestActive: true\n          });\n        });\n      });\n\n      _this.setState({\n        itemName: '',\n        description: ''\n      });\n\n      return Alert.alert('Item ready to exchange', '', [{\n        text: 'OK',\n        onPress: function onPress() {\n          _this.props.navigation.navigate('HomeScreen');\n        }\n      }]);\n    };\n\n    _this.getExchangeRequest = function () {\n      var exchangeRequest = db.collection('exchange_requests').where('user_id', '==', _this.state.userName).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          if (doc.data().item_status !== \"received\") {\n            _this.setState({\n              exchangeId: doc.data().exchangeId,\n              requestedItemName: doc.data().item_name,\n              itemStatus: doc.data().item_status,\n              docId: doc.id\n            });\n          }\n        });\n      });\n    };\n\n    _this.receivedItem = function (itemName) {\n      var userId = _this.state.userName;\n      var exchangeId = _this.state.exchangeId;\n      db.collection('received_items').add({\n        \"user_id\": userId,\n        \"item_name\": itemName,\n        \"exchange_id\": exchangeId,\n        \"itemStatus\": \"received\"\n      });\n    };\n\n    _this.updateExchangeRequestStatus = function () {\n      db.collection('exchange_requests').doc(_this.state.docId).update({\n        item_status: 'recieved'\n      });\n      db.collection('users').where('user_id', '==', _this.state.userName).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection('users').doc(doc.id).update({\n            IsExchangeRequestActive: false\n          });\n        });\n      });\n    };\n\n    _this.sendNotification = function () {\n      db.collection('users').where('user_id', '==', _this.state.userName).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var name = doc.data().first_name;\n          var lastName = doc.data().last_name;\n          db.collection('all_notifications').where('exchangeId', '==', _this.state.exchangeId).get().then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n              var donorId = doc.data().donor_id;\n              var bookName = doc.data().item_name;\n              db.collection('all_notifications').add({\n                \"targeted_user_id\": donorId,\n                \"message\": name + \" \" + lastName + \" received the item \" + itemName,\n                \"notification_status\": \"unread\",\n                \"item_name\": itemName\n              });\n            });\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      userName: firebase.auth().currentUser.email,\n      itemName: \"\",\n      description: \"\",\n      requestedItemName: \"\",\n      exchangeId: \"\",\n      itemStatus: \"\",\n      docId: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Exchange, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"getIsExchangeRequestActive\",\n    value: function getIsExchangeRequestActive() {\n      var _this2 = this;\n\n      db.collection('users').where('user_id', '==', this.state.userName).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this2.setState({\n            IsExchangeRequestActive: doc.data().IsExchangeRequestActive,\n            userDocId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getExchangeRequest();\n      this.getIsExchangeRequestActive();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.IsExchangeRequestActive === true) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 10\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 10\n          }\n        }, \"Item Name\"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 10\n          }\n        }, this.state.requestedItemName)), React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 10\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 10\n          }\n        }, \" Item Status \"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 10\n          }\n        }, this.state.itemStatus)), React.createElement(TouchableOpacity, {\n          style: {\n            borderWidth: 1,\n            borderColor: 'orange',\n            backgroundColor: \"orange\",\n            width: 300,\n            alignSelf: 'center',\n            alignItems: 'center',\n            height: 30,\n            marginTop: 30\n          },\n          onPress: function onPress() {\n            _this3.sendNotification();\n\n            _this3.updateExchangeRequestStatus();\n\n            _this3.receivedItem(_this3.state.requestedItemName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 10\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 10\n          }\n        }, \"I recieved the Item \")));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 9\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Add Item\",\n          navigation: this.props.navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 9\n          }\n        }), React.createElement(KeyboardAvoidingView, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 9\n          }\n        }, React.createElement(TextInput, {\n          style: styles.formTextInput,\n          placeholder: \"Item Name\",\n          maxLength: 8,\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              itemName: text\n            });\n          },\n          value: this.state.itemName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }\n        }), React.createElement(TextInput, {\n          multiline: true,\n          numberOfLines: 4,\n          style: [styles.formTextInput, {\n            height: 100\n          }],\n          placeholder: \"Description\",\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              description: text\n            });\n          },\n          value: this.state.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 11\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: [styles.button, {\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            _this3.addItem(_this3.state.itemName, _this3.state.description);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#ffff',\n            fontSize: 18,\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }\n        }, \"Add Item\"))));\n      }\n    }\n  }]);\n\n  return Exchange;\n}(Component);\n\nexport { Exchange as default };\nvar styles = StyleSheet.create({\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  button: {\n    width: \"75%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/HP WORLD/Desktop/whitehat/barter/screens/Exchange.js"],"names":["React","Component","firebase","db","MyHeader","Exchange","addItem","itemName","description","userName","state","exchangeId","createUniqueId","collection","add","firestore","FieldValue","serverTimestamp","where","get","then","snapshot","forEach","doc","id","update","IsExchangeRequestActive","setState","Alert","alert","text","onPress","props","navigation","navigate","getExchangeRequest","exchangeRequest","data","item_status","requestedItemName","item_name","itemStatus","docId","receivedItem","userId","updateExchangeRequestStatus","sendNotification","name","first_name","lastName","last_name","donorId","donor_id","bookName","auth","currentUser","email","Math","random","toString","substring","onSnapshot","querySnapshot","userDocId","getIsExchangeRequestActive","flex","justifyContent","borderColor","borderWidth","alignItems","padding","margin","backgroundColor","width","alignSelf","height","marginTop","styles","formTextInput","button","color","fontSize","fontWeight","StyleSheet","create","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, StyleSheet, Text, TextInput,KeyboardAvoidingView,TouchableOpacity,Alert, ToastAndroid } from 'react-native';\nimport firebase from 'firebase';\nimport db from '../config';\nimport MyHeader from '../components/MyHeader'\n\nexport default class Exchange extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      userName : firebase.auth().currentUser.email,\n      itemName : \"\",\n      description : \"\",\n      requestedItemName:\"\",\n      exchangeId:\"\",\n      itemStatus:\"\",\n      docId: \"\"\n\n    }\n  }\n\n  createUniqueId(){\n    return Math.random().toString(36).substring(7);\n  }\n\n  addItem= (itemName, description)=>{\n    var userName = this.state.userName\n   var exchangeId = this.createUniqueId()\n    db.collection(\"exchange_requests\").add({\n      \"user_id\"    : userName,\n      \"item_name\"   : itemName,\n      \"description\" : description,\n      \"exchangeId\"  : exchangeId,\n      \"item_status\" : \"requested\",\n        \"date\"       : firebase.firestore.FieldValue.serverTimestamp()\n\n     })\n\n     db.collection('users').where(\"user_id\",\"==\",userName).get()\n   .then()\n   .then((snapshot)=>{\n     snapshot.forEach((doc)=>{\n       db.collection('users').doc(doc.id).update({\n     IsExchangeRequestActive: true\n     })\n   })\n })\n\n     this.setState({\n       itemName : '',\n       description :''\n     })\n\n\n\n     // NOTE: Comment below return statement when you test the app in ios\n     // ToastAndroid.showWithGravityAndOffset('Item ready to exchange',\n     //    ToastAndroid.SHORT,\n     //  );\n     // return this.props.navigation.navigate('HomeScreen')\n\n     // NOTE:  Comment the below return statement when you test the app in android\n     return Alert.alert(\n          'Item ready to exchange',\n          '',\n          [\n            {text: 'OK', onPress: () => {\n\n              this.props.navigation.navigate('HomeScreen')\n            }}\n          ]\n      );\n  }\n\n\n  getIsExchangeRequestActive(){\n    db.collection('users')\n    .where('user_id','==',this.state.userName)\n    .onSnapshot(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        this.setState({\n          IsExchangeRequestActive:doc.data().IsExchangeRequestActive,\n          userDocId : doc.id\n        })\n      })\n    })\n  }\n\n  getExchangeRequest =()=>{\n    // getting the requested item\n  var exchangeRequest=  db.collection('exchange_requests')\n    .where('user_id','==',this.state.userName)\n    .get()\n    .then((snapshot)=>{\n      snapshot.forEach((doc)=>{\n        if(doc.data().item_status !== \"received\"){\n          this.setState({\n            exchangeId : doc.data().exchangeId,\n            requestedItemName: doc.data().item_name,\n            itemStatus:doc.data().item_status,\n            docId     : doc.id\n          })\n        }\n      })\n  })\n}\n\n  componentDidMount(){\n    this.getExchangeRequest()\n    this.getIsExchangeRequestActive()\n\n  }\n\n\n  receivedItem=(itemName)=>{\n    var userId = this.state.userName\n    var exchangeId = this.state.exchangeId\n    db.collection('received_items').add({\n        \"user_id\": userId,\n        \"item_name\":itemName,\n        \"exchange_id\"  : exchangeId,\n        \"itemStatus\"  : \"received\",\n\n    })\n  }\n\n  updateExchangeRequestStatus=()=>{\n    //updating the book status after receiving the book\n    db.collection('exchange_requests').doc(this.state.docId)\n    .update({\n      item_status : 'recieved'\n    })\n\n    //getting the  doc id to update the users doc\n    db.collection('users').where('user_id','==',this.state.userName).get()\n    .then((snapshot)=>{\n      snapshot.forEach((doc) => {\n        //updating the doc\n        db.collection('users').doc(doc.id).update({\n          IsExchangeRequestActive: false\n        })\n      })\n    })\n\n}\n  sendNotification=()=>{\n    //to get the first name and last name\n    db.collection('users').where('user_id','==',this.state.userName).get()\n    .then((snapshot)=>{\n      snapshot.forEach((doc)=>{\n        var name = doc.data().first_name\n        var lastName = doc.data().last_name\n\n        // to get the donor id and item name\n        db.collection('all_notifications').where('exchangeId','==',this.state.exchangeId).get()\n        .then((snapshot)=>{\n          snapshot.forEach((doc) => {\n            var donorId  = doc.data().donor_id\n            var bookName =  doc.data().item_name\n\n            //targert user id is the donor id to send notification to the user\n            db.collection('all_notifications').add({\n              \"targeted_user_id\" : donorId,\n              \"message\" : name +\" \" + lastName + \" received the item \" + itemName ,\n              \"notification_status\" : \"unread\",\n              \"item_name\" : itemName\n            })\n          })\n        })\n      })\n    })\n  }\n\n  render()\n  {\n    if (this.state.IsExchangeRequestActive === true){\n      // status screen\n      return(\n        <View style = {{flex:1,justifyContent:'center'}}>\n         <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\n         <Text>Item Name</Text>\n         <Text>{this.state.requestedItemName}</Text>\n         </View>\n         <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\n         <Text> Item Status </Text>\n\n         <Text>{this.state.itemStatus}</Text>\n         </View>\n\n         <TouchableOpacity style={{borderWidth:1,borderColor:'orange',backgroundColor:\"orange\",width:300,alignSelf:'center',alignItems:'center',height:30,marginTop:30}}\n         onPress={()=>{\n           this.sendNotification()\n           this.updateExchangeRequestStatus();\n           this.receivedItem(this.state.requestedItemName)\n         }}>\n         <Text>I recieved the Item </Text>\n         </TouchableOpacity>\n       </View>\n     )\n\n    }\n    else {\n      return(\n        <View style={{flex:1}}>\n        <MyHeader title=\"Add Item\" navigation ={this.props.navigation}/>\n        <KeyboardAvoidingView style={{flex:1,justifyContent:'center', alignItems:'center'}}>\n          <TextInput\n            style={styles.formTextInput}\n            placeholder ={\"Item Name\"}\n            maxLength ={8}\n            onChangeText={(text)=>{\n              this.setState({\n                itemName: text\n              })\n            }}\n            value={this.state.itemName}\n          />\n          <TextInput\n            multiline\n            numberOfLines={4}\n            style={[styles.formTextInput,{height:100}]}\n            placeholder ={\"Description\"}\n            onChangeText={(text)=>{\n              this.setState({\n                description: text\n              })\n            }}\n            value={this.state.description}\n\n          />\n          <TouchableOpacity\n            style={[styles.button,{marginTop:10}]}\n            onPress = {()=>{this.addItem(this.state.itemName, this.state.description)}}\n            >\n            <Text style={{color:'#ffff', fontSize:18, fontWeight:'bold'}}>Add Item</Text>\n          </TouchableOpacity>\n        </KeyboardAvoidingView>\n        </View>\n      )\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  formTextInput:{\n    width:\"75%\",\n    height:35,\n    alignSelf:'center',\n    borderColor:'#ffab91',\n    borderRadius:10,\n    borderWidth:1,\n    marginTop:20,\n    padding:10\n  },\n  button:{\n    width:\"75%\",\n    height:50,\n    justifyContent:'center',\n    alignItems:'center',\n    borderRadius:10,\n    backgroundColor:\"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n       width: 0,\n       height: 8,\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n  },\n\n})\n"]},"metadata":{},"sourceType":"module"}